{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilbhargava/portfolio-backtesting-app/src/components/backtesting/BacktestForm.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef } from 'react';\nimport { Upload, Download, Play, Pause, Square, AlertCircle, CheckCircle, Info } from 'lucide-react';\n\ninterface BacktestResults {\n  strategies: Array<{\n    strategy: string;\n    endValue: number;\n    totalReturn: number;\n    annualizedReturn: number;\n  }>;\n  summary: {\n    bestStrategy: string;\n    spyOutperformers: string[];\n    executionTime: number;\n  };\n}\n\ninterface BacktestFormProps {\n  onResults?: (results: BacktestResults) => void;\n}\n\nconst BacktestForm: React.FC<BacktestFormProps> = ({ onResults }) => {\n  const [config, setConfig] = useState({\n    startYear: 2010,\n    endYear: 2024,\n    initialInvestment: 1000000,\n    strategies: ['equalWeightBuyHold', 'marketCapBuyHold', 'equalWeightRebalanced', 'marketCapRebalanced']\n  });\n  \n  const [isRunning, setIsRunning] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [progress, setProgress] = useState({ current: 0, total: 0, step: '' });\n  const [results, setResults] = useState<BacktestResults | null>(null);\n  const [error, setError] = useState<string>('');\n  const [stocksInput, setStocksInput] = useState<string>('');\n  const [customStocks, setCustomStocks] = useState<string>('AAPL\\nMSFT\\nGOOGL\\nAMZN\\nTSLA');\n\n  const abortControllerRef = useRef<AbortController | null>(null);\n\n  const strategyOptions = [\n    { id: 'equalWeightBuyHold', name: 'Equal Weight Buy & Hold', description: 'Equal weights, no rebalancing' },\n    { id: 'marketCapBuyHold', name: 'Market Cap Buy & Hold', description: 'Market cap weights, no rebalancing' },\n    { id: 'equalWeightRebalanced', name: 'Equal Weight Rebalanced', description: 'Annual equal weight rebalancing' },\n    { id: 'marketCapRebalanced', name: 'Market Cap Rebalanced', description: 'Annual market cap rebalancing' }\n  ];\n\n  const handleStrategyChange = (strategyId: string, checked: boolean) => {\n    setConfig(prev => ({\n      ...prev,\n      strategies: checked \n        ? [...prev.strategies, strategyId]\n        : prev.strategies.filter(s => s !== strategyId)\n    }));\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result as string;\n      setStocksInput(content);\n    };\n    reader.readAsText(file);\n  };\n\n  const runBacktest = async () => {\n    setError('');\n    setIsRunning(true);\n    setIsPaused(false);\n    setResults(null);\n    \n    try {\n      // Parse stocks input\n      let stocks;\n      if (stocksInput.includes(',')) {\n        // CSV format or comma-separated\n        const lines = stocksInput.trim().split('\\n');\n        if (lines[0].toLowerCase().includes('ticker')) {\n          // Has header\n          stocks = lines.slice(1).map(line => {\n            const [ticker, startDate, endDate] = line.split(',').map(s => s.trim());\n            return { ticker, startDate, endDate: endDate || null };\n          });\n        } else {\n          // Just tickers\n          stocks = stocksInput.split(',').map(ticker => ({\n            ticker: ticker.trim(),\n            startDate: `${config.startYear}-01-01`,\n            endDate: null\n          }));\n        }\n      } else if (customStocks) {\n        // Use custom stocks\n        stocks = customStocks.split('\\n').map(ticker => ({\n          ticker: ticker.trim(),\n          startDate: `${config.startYear}-01-01`, \n          endDate: null\n        })).filter(s => s.ticker);\n      } else {\n        // Use SP500 data\n        setProgress({ current: 1, total: 10, step: 'Loading S&P 500 stock data...' });\n        const response = await fetch('/api/backtesting?action=sp500-stocks');\n        const sp500Data = await response.json();\n        stocks = sp500Data.stocks;\n      }\n\n      if (!stocks || stocks.length === 0) {\n        throw new Error('No stocks provided for backtesting');\n      }\n\n      setProgress({ current: 2, total: 10, step: `Initializing backtest with ${stocks.length} stocks...` });\n\n      const fullConfig = {\n        stocks,\n        startYear: config.startYear,\n        endYear: config.endYear,\n        initialInvestment: config.initialInvestment,\n        strategies: config.strategies\n      };\n\n      // Start backtest - FIXED: Call /api/backtesting instead of /api/backtesting/run\n      abortControllerRef.current = new AbortController();\n      \n      const response = await fetch('/api/backtesting', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(fullConfig),\n        signal: abortControllerRef.current.signal\n      });\n\n      if (!response.ok) {\n        throw new Error(`Backtest failed: ${response.statusText}`);\n      }\n\n      // Handle streaming response\n      const reader = response.body?.getReader();\n      if (!reader) throw new Error('No response stream');\n\n      let buffer = '';\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n\n        // Process streaming data\n        buffer += new TextDecoder().decode(value);\n        const lines = buffer.split('\\n');\n        buffer = lines.pop() || '';\n\n        for (const line of lines) {\n          if (line.trim()) {\n            try {\n              const data = JSON.parse(line);\n              \n              if (data.type === 'progress') {\n                setProgress(data.progress);\n              } else if (data.type === 'results') {\n                setResults(data.results);\n                onResults?.(data.results);\n              } else if (data.type === 'error') {\n                throw new Error(data.error);\n              }\n            } catch (e) {\n              console.log('Non-JSON line:', line);\n            }\n          }\n        }\n      }\n\n    } catch (error) {\n      if (error instanceof Error && error.name === 'AbortError') {\n        setError('Backtest was cancelled');\n      } else {\n        setError(error instanceof Error ? error.message : 'Unknown error occurred');\n      }\n    } finally {\n      setIsRunning(false);\n      setIsPaused(false);\n      setProgress({ current: 0, total: 0, step: '' });\n    }\n  };\n\n  const pauseBacktest = () => {\n    setIsPaused(true);\n  };\n\n  const stopBacktest = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n    setIsRunning(false);\n    setIsPaused(false);\n  };\n\n  const downloadResults = async () => {\n    if (!results) return;\n\n    try {\n      const response = await fetch('/api/excel-export', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          strategies: results.strategies,\n          spyData: [],\n          startYear: config.startYear,\n          endYear: config.endYear,\n          initialInvestment: config.initialInvestment\n        })\n      });\n\n      if (!response.ok) throw new Error('Export failed');\n\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `portfolio_backtest_${config.startYear}_${config.endYear}.xlsx`;\n      document.body.appendChild(a);\n      a.click();\n      window.URL.revokeObjectURL(url);\n      document.body.removeChild(a);\n    } catch (error) {\n      setError(`Export failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6 space-y-6\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center gap-3 mb-6\">\n          <div className=\"h-8 w-8 bg-blue-600 rounded flex items-center justify-center\">\n            <span className=\"text-white text-lg\">📊</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900\">Portfolio Backtesting</h1>\n        </div>\n\n        {/* Configuration Section */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-6\">\n          {/* Time Period */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Time Period</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Start Year</label>\n                <select\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  value={config.startYear}\n                  onChange={(e) => setConfig(prev => ({ ...prev, startYear: parseInt(e.target.value) }))}\n                >\n                  {Array.from({ length: 30 }, (_, i) => 1996 + i).map(year => (\n                    <option key={year} value={year}>{year}</option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">End Year</label>\n                <select\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  value={config.endYear}\n                  onChange={(e) => setConfig(prev => ({ ...prev, endYear: parseInt(e.target.value) }))}\n                >\n                  {Array.from({ length: 30 }, (_, i) => 1996 + i).map(year => (\n                    <option key={year} value={year}>{year}</option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {/* Investment Amount */}\n          <div className=\"space-y-4\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Investment Amount</h3>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Initial Investment</label>\n              <input\n                type=\"number\"\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                value={config.initialInvestment}\n                onChange={(e) => setConfig(prev => ({ ...prev, initialInvestment: parseInt(e.target.value) }))}\n                min=\"1000\"\n                step=\"1000\"\n              />\n              <p className=\"text-sm text-gray-500 mt-1\">\n                ${config.initialInvestment.toLocaleString()}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Strategy Selection */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Strategies to Test</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {strategyOptions.map(strategy => (\n              <label key={strategy.id} className=\"flex items-start space-x-3 p-3 border border-gray-200 rounded-lg hover:bg-gray-50\">\n                <input\n                  type=\"checkbox\"\n                  checked={config.strategies.includes(strategy.id)}\n                  onChange={(e) => handleStrategyChange(strategy.id, e.target.checked)}\n                  className=\"mt-1 h-4 w-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\n                />\n                <div>\n                  <div className=\"font-medium text-gray-900\">{strategy.name}</div>\n                  <div className=\"text-sm text-gray-500\">{strategy.description}</div>\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        {/* Stock Selection */}\n        <div className=\"mb-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Stock Universe</h3>\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-wrap gap-4\">\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"radio\"\n                  name=\"stockSource\"\n                  value=\"sp500\"\n                  checked={!stocksInput && !customStocks}\n                  onChange={() => { setStocksInput(''); setCustomStocks(''); }}\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500\"\n                />\n                <span>S&P 500 Historical Constituents</span>\n              </label>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"radio\"\n                  name=\"stockSource\"\n                  value=\"custom\"\n                  checked={!!customStocks}\n                  onChange={() => setCustomStocks('AAPL\\nMSFT\\nGOOGL\\nAMZN\\nTSLA')}\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500\"\n                />\n                <span>Custom Stock List</span>\n              </label>\n              <label className=\"flex items-center space-x-2\">\n                <input\n                  type=\"radio\"\n                  name=\"stockSource\"\n                  value=\"upload\"\n                  checked={!!stocksInput}\n                  onChange={() => {}}\n                  className=\"h-4 w-4 text-blue-600 border-gray-300 focus:ring-blue-500\"\n                />\n                <span>Upload CSV</span>\n              </label>\n            </div>\n\n            {customStocks !== '' && (\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Stock Tickers (one per line)</label>\n                <textarea\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  rows={6}\n                  value={customStocks}\n                  onChange={(e) => setCustomStocks(e.target.value)}\n                  placeholder=\"AAPL&#10;MSFT&#10;GOOGL&#10;AMZN&#10;TSLA\"\n                />\n              </div>\n            )}\n\n            {stocksInput === '' && customStocks === '' && (\n              <div className=\"flex items-center gap-2\">\n                <Upload className=\"h-5 w-5 text-gray-400\" />\n                <input\n                  type=\"file\"\n                  accept=\".csv,.txt\"\n                  onChange={handleFileUpload}\n                  className=\"text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n                />\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Control Buttons */}\n        <div className=\"flex items-center gap-4 mb-6\">\n          {!isRunning ? (\n            <button\n              onClick={runBacktest}\n              disabled={!config.strategies?.length}\n              className=\"flex items-center gap-2 px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed font-medium\"\n            >\n              <Play className=\"h-5 w-5\" />\n              Run Backtest\n            </button>\n          ) : (\n            <>\n              <button\n                onClick={pauseBacktest}\n                disabled={isPaused}\n                className=\"flex items-center gap-2 px-6 py-3 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 disabled:bg-gray-400\"\n              >\n                <Pause className=\"h-5 w-5\" />\n                Pause\n              </button>\n              <button\n                onClick={stopBacktest}\n                className=\"flex items-center gap-2 px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700\"\n              >\n                <Square className=\"h-5 w-5\" />\n                Stop\n              </button>\n            </>\n          )}\n\n          {results && (\n            <button\n              onClick={downloadResults}\n              className=\"flex items-center gap-2 px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700\"\n            >\n              <Download className=\"h-5 w-5\" />\n              Download Excel\n            </button>\n          )}\n        </div>\n\n        {/* Progress */}\n        {isRunning && (\n          <div className=\"mb-6 p-4 bg-blue-50 rounded-lg\">\n            <div className=\"flex items-center gap-3 mb-2\">\n              <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-blue-600 border-t-transparent\"></div>\n              <span className=\"font-medium text-blue-900\">Running Backtest...</span>\n            </div>\n            {progress.total > 0 && (\n              <>\n                <div className=\"w-full bg-blue-200 rounded-full h-2 mb-2\">\n                  <div \n                    className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                    style={{ width: `${(progress.current / progress.total) * 100}%` }}\n                  ></div>\n                </div>\n                <p className=\"text-sm text-blue-700\">\n                  {progress.step} ({progress.current}/{progress.total})\n                </p>\n              </>\n            )}\n          </div>\n        )}\n\n        {/* Error Display */}\n        {error && (\n          <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <AlertCircle className=\"h-5 w-5 text-red-600\" />\n              <span className=\"font-medium text-red-900\">Error</span>\n            </div>\n            <p className=\"text-red-700 mt-1\">{error}</p>\n          </div>\n        )}\n\n        {/* Results Preview */}\n        {results && (\n          <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center gap-2 mb-3\">\n              <CheckCircle className=\"h-5 w-5 text-green-600\" />\n              <span className=\"font-medium text-green-900\">Backtest Complete!</span>\n            </div>\n            <div className=\"text-sm text-green-700\">\n              <p>✅ {results.strategies.length} strategies completed</p>\n              <p>📊 Best strategy: {results.summary.bestStrategy}</p>\n              <p>🎯 Strategies beating SPY: {results.summary.spyOutperformers.length}</p>\n              <p className=\"mt-2 font-medium\">Download the Excel file for detailed results and analysis.</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BacktestForm;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilbhargava/portfolio-backtesting-app/src/lib/utils/dateUtils.ts"],"sourcesContent":["import { StartOfYearDates } from '../../types/backtesting';\n\n/**\n * Date utilities for portfolio backtesting\n */\n\nexport const START_OF_YEAR_DATES: StartOfYearDates = {\n  '1996': '1996-01-02',\n  '1997': '1997-01-07', \n  '1998': '1998-01-06',\n  '1999': '1999-01-05',\n  '2000': '2000-01-04',\n  '2001': '2001-01-02',\n  '2002': '2002-01-02',\n  '2003': '2003-01-07',\n  '2004': '2004-01-06',\n  '2005': '2005-01-04',\n  '2006': '2006-01-03',\n  '2007': '2007-01-03',\n  '2008': '2008-01-02',\n  '2009': '2009-01-06',\n  '2010': '2010-01-05',\n  '2011': '2011-01-04',\n  '2012': '2012-01-03',\n  '2013': '2013-01-02',\n  '2014': '2014-01-07',\n  '2015': '2015-01-06',\n  '2016': '2016-01-05',\n  '2017': '2017-01-03',\n  '2018': '2018-01-02',\n  '2019': '2019-01-02',\n  '2020': '2020-01-07',\n  '2021': '2021-01-05',\n  '2022': '2022-01-04',\n  '2023': '2023-01-03',\n  '2024': '2024-01-02',\n  '2025': '2025-01-07'\n};\n\n/**\n * Get the start-of-year date for a given year\n */\nexport function getStartOfYearDate(year: number): string {\n  const yearStr = year.toString();\n  const date = START_OF_YEAR_DATES[yearStr];\n  if (!date) {\n    throw new Error(`No start-of-year date found for year ${year}`);\n  }\n  return date;\n}\n\n/**\n * Format date for API calls (YYYY-MM-DD)\n */\nexport function formatDateForAPI(date: string | Date): string {\n  if (typeof date === 'string') {\n    // Assume it's already in the correct format or convert from M/D/YY\n    if (date.includes('/')) {\n      const [month, day, year] = date.split('/');\n      const fullYear = parseInt(year) < 50 ? `20${year}` : `19${year}`;\n      return `${fullYear}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    }\n    return date;\n  }\n  \n  return date.toISOString().split('T')[0];\n}\n\n/**\n * Parse date from various formats to Date object\n */\nexport function parseDate(dateStr: string): Date {\n  // Handle M/D/YY format\n  if (dateStr.includes('/')) {\n    const [month, day, year] = dateStr.split('/');\n    const fullYear = parseInt(year) < 50 ? `20${year}` : `19${year}`;\n    return new Date(`${fullYear}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`);\n  }\n  \n  // Handle YYYY-MM-DD format\n  return new Date(dateStr);\n}\n\n/**\n * Check if a date is within a given range\n */\nexport function isDateInRange(date: string, startDate: string, endDate: string | null): boolean {\n  const checkDate = parseDate(date);\n  const rangeStart = parseDate(startDate);\n  \n  if (endDate) {\n    const rangeEnd = parseDate(endDate);\n    return checkDate >= rangeStart && checkDate <= rangeEnd;\n  }\n  \n  return checkDate >= rangeStart;\n}\n\n/**\n * Get all years in a range\n */\nexport function getYearsInRange(startYear: number, endYear: number): number[] {\n  const years: number[] = [];\n  for (let year = startYear; year <= endYear; year++) {\n    years.push(year);\n  }\n  return years;\n}\n\n/**\n * Calculate years between two dates\n */\nexport function getYearsBetweenDates(startDate: string, endDate: string): number {\n  const start = parseDate(startDate);\n  const end = parseDate(endDate);\n  return (end.getTime() - start.getTime()) / (365.25 * 24 * 60 * 60 * 1000);\n}\n\n/**\n * Check if a year has a start date defined\n */\nexport function hasStartOfYearDate(year: number): boolean {\n  return START_OF_YEAR_DATES[year.toString()] !== undefined;\n}\n\n/**\n * Get the next valid year with a start date\n */\nexport function getNextValidYear(year: number): number | null {\n  for (let nextYear = year + 1; nextYear <= 2025; nextYear++) {\n    if (hasStartOfYearDate(nextYear)) {\n      return nextYear;\n    }\n  }\n  return null;\n}\n\n/**\n * Convert date to display format\n */\nexport function formatDateForDisplay(date: string): string {\n  const dateObj = parseDate(date);\n  return dateObj.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric'\n  });\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1130, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilbhargava/portfolio-backtesting-app/src/lib/utils/portfolioUtils.ts"],"sourcesContent":["import { PortfolioHolding, PriceData, Stock } from '../../types/backtesting';\nimport { isDateInRange } from './dateUtils';\n\n/**\n * Portfolio utilities for backtesting strategies\n */\n\n/**\n * Get stocks available on a specific date\n */\nexport function getAvailableStocks(stocks: Stock[], date: string): Stock[] {\n  return stocks.filter(stock => isDateInRange(date, stock.startDate, stock.endDate));\n}\n\n/**\n * Calculate equal weights for a list of stocks\n */\nexport function calculateEqualWeights(stockCount: number): number[] {\n  const weight = 1 / stockCount;\n  return Array(stockCount).fill(weight);\n}\n\n/**\n * Calculate market cap weights from price data\n */\nexport function calculateMarketCapWeights(priceData: PriceData[]): number[] {\n  const totalMarketCap = priceData.reduce((sum, data) => sum + data.marketCap, 0);\n  \n  if (totalMarketCap === 0) {\n    return calculateEqualWeights(priceData.length);\n  }\n  \n  return priceData.map(data => data.marketCap / totalMarketCap);\n}\n\n/**\n * Calculate shares to purchase given dollar allocation and price\n */\nexport function calculateShares(dollarAmount: number, price: number): number {\n  if (price <= 0) return 0;\n  return Math.floor(dollarAmount / price);\n}\n\n/**\n * Calculate portfolio value from holdings and current prices\n */\nexport function calculatePortfolioValue(\n  holdings: PortfolioHolding[], \n  priceData: PriceData[]\n): number {\n  let totalValue = 0;\n  \n  holdings.forEach(holding => {\n    const currentPrice = priceData.find(p => p.ticker === holding.ticker);\n    if (currentPrice) {\n      totalValue += holding.shares * currentPrice.adjustedPrice;\n    }\n  });\n  \n  return totalValue;\n}\n\n/**\n * Update portfolio weights based on current values\n */\nexport function updatePortfolioWeights(\n  holdings: PortfolioHolding[], \n  totalValue: number\n): PortfolioHolding[] {\n  return holdings.map(holding => ({\n    ...holding,\n    weight: totalValue > 0 ? holding.value / totalValue : 0\n  }));\n}\n\n/**\n * Rebalance portfolio to target weights\n */\nexport function rebalancePortfolio(\n  currentHoldings: PortfolioHolding[],\n  targetWeights: number[],\n  availableStocks: Stock[],\n  priceData: PriceData[],\n  totalValue: number,\n  cash: number = 0\n): { holdings: PortfolioHolding[]; cash: number; trades: Trade[] } {\n  const trades: Trade[] = [];\n  const newHoldings: PortfolioHolding[] = [];\n  let remainingCash = cash;\n\n  // Calculate target dollar amounts\n  const totalToInvest = totalValue + cash;\n  \n  availableStocks.forEach((stock, index) => {\n    const targetWeight = targetWeights[index] || 0;\n    const targetValue = totalToInvest * targetWeight;\n    const currentPrice = priceData.find(p => p.ticker === stock.ticker);\n    \n    if (!currentPrice || currentPrice.adjustedPrice <= 0) {\n      return;\n    }\n\n    const currentHolding = currentHoldings.find(h => h.ticker === stock.ticker);\n    const currentValue = currentHolding ? currentHolding.value : 0;\n    const currentShares = currentHolding ? currentHolding.shares : 0;\n\n    // Calculate required shares for target value\n    const targetShares = Math.floor(targetValue / currentPrice.adjustedPrice);\n    const sharesDiff = targetShares - currentShares;\n\n    if (sharesDiff !== 0) {\n      const tradeValue = Math.abs(sharesDiff) * currentPrice.adjustedPrice;\n      \n      if (sharesDiff > 0) {\n        // Buy shares\n        if (remainingCash >= tradeValue) {\n          remainingCash -= tradeValue;\n          trades.push({\n            ticker: stock.ticker,\n            action: 'buy',\n            shares: sharesDiff,\n            price: currentPrice.adjustedPrice,\n            value: tradeValue\n          });\n        } else {\n          // Buy as many shares as possible with remaining cash\n          const affordableShares = Math.floor(remainingCash / currentPrice.adjustedPrice);\n          if (affordableShares > 0) {\n            const affordableValue = affordableShares * currentPrice.adjustedPrice;\n            remainingCash -= affordableValue;\n            trades.push({\n              ticker: stock.ticker,\n              action: 'buy',\n              shares: affordableShares,\n              price: currentPrice.adjustedPrice,\n              value: affordableValue\n            });\n          }\n        }\n      } else {\n        // Sell shares\n        remainingCash += tradeValue;\n        trades.push({\n          ticker: stock.ticker,\n          action: 'sell',\n          shares: Math.abs(sharesDiff),\n          price: currentPrice.adjustedPrice,\n          value: tradeValue\n        });\n      }\n    }\n\n    // Update holdings\n    const finalShares = currentShares + (sharesDiff > 0 ? \n      Math.min(sharesDiff, Math.floor(remainingCash / currentPrice.adjustedPrice)) : sharesDiff);\n    \n    if (finalShares > 0) {\n      newHoldings.push({\n        ticker: stock.ticker,\n        shares: finalShares,\n        value: finalShares * currentPrice.adjustedPrice,\n        weight: (finalShares * currentPrice.adjustedPrice) / totalToInvest,\n        marketCap: currentPrice.marketCap\n      });\n    }\n  });\n\n  return { holdings: newHoldings, cash: remainingCash, trades };\n}\n\n/**\n * Add new stocks to portfolio with proportional reduction\n */\nexport function addNewStocksProportionally(\n  currentHoldings: PortfolioHolding[],\n  newStocks: Stock[],\n  newStockWeights: number[],\n  priceData: PriceData[],\n  totalValue: number\n): PortfolioHolding[] {\n  const newHoldings = [...currentHoldings];\n  const totalNewWeight = newStockWeights.reduce((sum, weight) => sum + weight, 0);\n  const reductionFactor = 1 - totalNewWeight;\n\n  // Reduce existing holdings proportionally\n  newHoldings.forEach(holding => {\n    holding.weight *= reductionFactor;\n    holding.value = holding.weight * totalValue;\n  });\n\n  // Add new stocks\n  newStocks.forEach((stock, index) => {\n    const weight = newStockWeights[index];\n    const value = weight * totalValue;\n    const currentPrice = priceData.find(p => p.ticker === stock.ticker);\n    \n    if (currentPrice && currentPrice.adjustedPrice > 0) {\n      const shares = Math.floor(value / currentPrice.adjustedPrice);\n      if (shares > 0) {\n        newHoldings.push({\n          ticker: stock.ticker,\n          shares,\n          value: shares * currentPrice.adjustedPrice,\n          weight,\n          marketCap: currentPrice.marketCap\n        });\n      }\n    }\n  });\n\n  return newHoldings;\n}\n\n/**\n * Calculate annualized return\n */\nexport function calculateAnnualizedReturn(\n  startValue: number, \n  endValue: number, \n  years: number\n): number {\n  if (startValue <= 0 || years <= 0) return 0;\n  return Math.pow(endValue / startValue, 1 / years) - 1;\n}\n\n/**\n * Calculate total return\n */\nexport function calculateTotalReturn(startValue: number, endValue: number): number {\n  if (startValue <= 0) return 0;\n  return (endValue - startValue) / startValue;\n}\n\n/**\n * Format currency value\n */\nexport function formatCurrency(value: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0\n  }).format(value);\n}\n\n/**\n * Format percentage\n */\nexport function formatPercentage(value: number, decimals: number = 2): string {\n  return `${(value * 100).toFixed(decimals)}%`;\n}\n\n/**\n * Trade interface for tracking transactions\n */\nexport interface Trade {\n  ticker: string;\n  action: 'buy' | 'sell';\n  shares: number;\n  price: number;\n  value: number;\n}\n\n/**\n * Validate portfolio holdings\n */\nexport function validateHoldings(holdings: PortfolioHolding[]): boolean {\n  return holdings.every(holding => \n    holding.shares >= 0 && \n    holding.value >= 0 && \n    holding.weight >= 0 &&\n    holding.weight <= 1\n  );\n}\n\n/**\n * Clean up holdings (remove zero-share positions)\n */\nexport function cleanupHoldings(holdings: PortfolioHolding[]): PortfolioHolding[] {\n  return holdings.filter(holding => holding.shares > 0);\n}\n\n/**\n * Sort holdings by value (descending)\n */\nexport function sortHoldingsByValue(holdings: PortfolioHolding[]): PortfolioHolding[] {\n  return [...holdings].sort((a, b) => b.value - a.value);\n}\n\n/**\n * Get portfolio statistics\n */\nexport function getPortfolioStats(holdings: PortfolioHolding[]): {\n  totalValue: number;\n  stockCount: number;\n  largestHolding: PortfolioHolding | null;\n  topConcentration: number;\n} {\n  const totalValue = holdings.reduce((sum, holding) => sum + holding.value, 0);\n  const sortedHoldings = sortHoldingsByValue(holdings);\n  \n  return {\n    totalValue,\n    stockCount: holdings.length,\n    largestHolding: sortedHoldings[0] || null,\n    topConcentration: sortedHoldings[0]?.weight || 0\n  };\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1344, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilbhargava/portfolio-backtesting-app/src/components/backtesting/ResultsDisplay.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { TrendingUp, TrendingDown, DollarSign, Percent, Calendar, Award, Target, BarChart3 } from 'lucide-react';\nimport { BacktestResults } from '../../lib/strategies/strategyRunner';\nimport { formatCurrency, formatPercentage } from '../../lib/utils/portfolioUtils';\n\ninterface ResultsDisplayProps {\n  results: BacktestResults;\n  startYear: number;\n  endYear: number;\n  initialInvestment: number;\n}\n\nconst ResultsDisplay: React.FC<ResultsDisplayProps> = ({ \n  results, \n  startYear, \n  endYear, \n  initialInvestment \n}) => {\n  const [selectedStrategy, setSelectedStrategy] = useState<string>(results.strategies[0]?.strategy || '');\n  const [viewMode, setViewMode] = useState<'summary' | 'detailed' | 'holdings'>('summary');\n\n  const selectedStrategyData = results.strategies.find(s => s.strategy === selectedStrategy);\n  const years = endYear - startYear;\n\n  // Calculate additional metrics\n  const calculateSharpeRatio = (strategy: any) => {\n    // Simplified Sharpe ratio calculation (assuming 2% risk-free rate)\n    const riskFreeRate = 0.02;\n    const excessReturn = strategy.annualizedReturn - riskFreeRate;\n    // For simplicity, using a rough volatility estimate\n    const volatility = Math.sqrt(Math.abs(strategy.totalReturn / years));\n    return volatility > 0 ? excessReturn / volatility : 0;\n  };\n\n  const getPerformanceIcon = (value: number, benchmark: number) => {\n    if (value > benchmark) {\n      return <TrendingUp className=\"h-5 w-5 text-green-600\" />;\n    } else {\n      return <TrendingDown className=\"h-5 w-5 text-red-600\" />;\n    }\n  };\n\n  const getPerformanceColor = (value: number, benchmark: number) => {\n    return value > benchmark ? 'text-green-600' : 'text-red-600';\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-6\">\n      {/* Header Summary */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex items-center justify-between mb-6\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Backtesting Results</h2>\n            <p className=\"text-gray-600\">\n              {startYear} - {endYear} • {formatCurrency(initialInvestment)} Initial Investment\n            </p>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-500\">\n            <Calendar className=\"h-4 w-4\" />\n            {years} years • {results.strategies.length} strategies\n          </div>\n        </div>\n\n        {/* Key Metrics Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          {/* Best Strategy */}\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Award className=\"h-5 w-5 text-green-600\" />\n              <span className=\"font-medium text-green-900\">Best Strategy</span>\n            </div>\n            <p className=\"font-bold text-lg text-green-900\">{results.summary.bestStrategy}</p>\n            <p className=\"text-sm text-green-700\">\n              {formatCurrency(Math.max(...results.strategies.map(s => s.endValue)))}\n            </p>\n          </div>\n\n          {/* SPY Benchmark */}\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Target className=\"h-5 w-5 text-blue-600\" />\n              <span className=\"font-medium text-blue-900\">SPY Benchmark</span>\n            </div>\n            <p className=\"font-bold text-lg text-blue-900\">\n              {formatPercentage(results.spyBenchmark.totalReturn)}\n            </p>\n            <p className=\"text-sm text-blue-700\">\n              {formatCurrency(results.spyBenchmark.endValue)}\n            </p>\n          </div>\n\n          {/* Outperformers */}\n          <div className=\"bg-purple-50 border border-purple-200 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <TrendingUp className=\"h-5 w-5 text-purple-600\" />\n              <span className=\"font-medium text-purple-900\">Beat SPY</span>\n            </div>\n            <p className=\"font-bold text-lg text-purple-900\">\n              {results.summary.spyOutperformers.length}/{results.strategies.length}\n            </p>\n            <p className=\"text-sm text-purple-700\">strategies</p>\n          </div>\n\n          {/* Execution Time */}\n          <div className=\"bg-gray-50 border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center gap-2 mb-2\">\n              <BarChart3 className=\"h-5 w-5 text-gray-600\" />\n              <span className=\"font-medium text-gray-900\">Execution</span>\n            </div>\n            <p className=\"font-bold text-lg text-gray-900\">\n              {(results.summary.executionTime / 1000).toFixed(1)}s\n            </p>\n            <p className=\"text-sm text-gray-700\">processing time</p>\n          </div>\n        </div>\n      </div>\n\n      {/* View Mode Selector */}\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <div className=\"flex flex-wrap gap-2 mb-6\">\n          {['summary', 'detailed', 'holdings'].map(mode => (\n            <button\n              key={mode}\n              onClick={() => setViewMode(mode as any)}\n              className={`px-4 py-2 rounded-lg font-medium transition-colors ${\n                viewMode === mode\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\n              }`}\n            >\n              {mode.charAt(0).toUpperCase() + mode.slice(1)}\n            </button>\n          ))}\n        </div>\n\n        {/* Summary View */}\n        {viewMode === 'summary' && (\n          <div className=\"space-y-6\">\n            <h3 className=\"text-xl font-semibold text-gray-900\">Strategy Performance Summary</h3>\n            \n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full border border-gray-200 rounded-lg\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Strategy\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Final Value\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Total Return\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Annual Return\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      vs SPY\n                    </th>\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Sharpe Ratio\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {results.strategies.map((strategy, index) => (\n                    <tr \n                      key={strategy.strategy}\n                      className={`hover:bg-gray-50 cursor-pointer ${\n                        selectedStrategy === strategy.strategy ? 'bg-blue-50' : ''\n                      }`}\n                      onClick={() => setSelectedStrategy(strategy.strategy)}\n                    >\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"font-medium text-gray-900\">{strategy.strategy}</div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"font-bold text-gray-900\">\n                          {formatCurrency(strategy.endValue)}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className={`font-medium ${\n                          strategy.totalReturn > 0 ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          {formatPercentage(strategy.totalReturn)}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className={`font-medium ${\n                          strategy.annualizedReturn > 0 ? 'text-green-600' : 'text-red-600'\n                        }`}>\n                          {formatPercentage(strategy.annualizedReturn)}\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className={`flex items-center gap-1 ${\n                          getPerformanceColor(strategy.endValue, results.spyBenchmark.endValue)\n                        }`}>\n                          {getPerformanceIcon(strategy.endValue, results.spyBenchmark.endValue)}\n                          <span className=\"font-medium\">\n                            {strategy.endValue > results.spyBenchmark.endValue ? '+' : ''}\n                            {formatPercentage(\n                              (strategy.endValue - results.spyBenchmark.endValue) / results.spyBenchmark.endValue\n                            )}\n                          </span>\n                        </div>\n                      </td>\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\n                        <div className=\"text-gray-900 font-medium\">\n                          {calculateSharpeRatio(strategy).toFixed(2)}\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                  \n                  {/* SPY Benchmark Row */}\n                  <tr className=\"bg-blue-50 border-t-2 border-blue-200\">\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"font-bold text-blue-900\">SPY Benchmark</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"font-bold text-blue-900\">\n                        {formatCurrency(results.spyBenchmark.endValue)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"font-bold text-blue-900\">\n                        {formatPercentage(results.spyBenchmark.totalReturn)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"font-bold text-blue-900\">\n                        {formatPercentage(results.spyBenchmark.annualizedReturn)}\n                      </div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-blue-700\">—</div>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <div className=\"text-blue-900 font-bold\">\n                        {calculateSharpeRatio(results.spyBenchmark).toFixed(2)}\n                      </div>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n\n        {/* Detailed View */}\n        {viewMode === 'detailed' && selectedStrategyData && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">\n                {selectedStrategyData.strategy} - Detailed Analysis\n              </h3>\n              <select\n                value={selectedStrategy}\n                onChange={(e) => setSelectedStrategy(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {results.strategies.map(strategy => (\n                  <option key={strategy.strategy} value={strategy.strategy}>\n                    {strategy.strategy}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Year-by-Year Performance */}\n            <div>\n              <h4 className=\"font-semibold text-gray-900 mb-4\">Year-by-Year Performance</h4>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full border border-gray-200 rounded-lg\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Date</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Portfolio Value</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Holdings</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Cash</th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">YoY Return</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {selectedStrategyData.yearlySnapshots.map((snapshot, index) => {\n                      const prevSnapshot = selectedStrategyData.yearlySnapshots[index - 1];\n                      const yoyReturn = prevSnapshot \n                        ? (snapshot.totalValue - prevSnapshot.totalValue) / prevSnapshot.totalValue\n                        : 0;\n                      \n                      return (\n                        <tr key={snapshot.date} className=\"hover:bg-gray-50\">\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                            {new Date(snapshot.date).toLocaleDateString()}\n                          </td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            {formatCurrency(snapshot.totalValue)}\n                          </td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                            {snapshot.holdings.length} stocks\n                          </td>\n                          <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                            {formatCurrency(snapshot.cash)}\n                          </td>\n                          <td className={`px-4 py-2 whitespace-nowrap text-sm font-medium ${\n                            yoyReturn >= 0 ? 'text-green-600' : 'text-red-600'\n                          }`}>\n                            {index > 0 ? formatPercentage(yoyReturn) : '—'}\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Holdings View */}\n        {viewMode === 'holdings' && selectedStrategyData && (\n          <div className=\"space-y-6\">\n            <div className=\"flex items-center justify-between\">\n              <h3 className=\"text-xl font-semibold text-gray-900\">\n                {selectedStrategyData.strategy} - Holdings Breakdown\n              </h3>\n              <select\n                value={selectedStrategy}\n                onChange={(e) => setSelectedStrategy(e.target.value)}\n                className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                {results.strategies.map(strategy => (\n                  <option key={strategy.strategy} value={strategy.strategy}>\n                    {strategy.strategy}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Final Holdings */}\n            {selectedStrategyData.yearlySnapshots.length > 0 && (\n              <div>\n                <h4 className=\"font-semibold text-gray-900 mb-4\">\n                  Final Holdings ({selectedStrategyData.yearlySnapshots[selectedStrategyData.yearlySnapshots.length - 1].date})\n                </h4>\n                <div className=\"overflow-x-auto\">\n                  <table className=\"w-full border border-gray-200 rounded-lg\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Ticker</th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Shares</th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Value</th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Weight</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                      {selectedStrategyData.yearlySnapshots[selectedStrategyData.yearlySnapshots.length - 1].holdings\n                        .sort((a, b) => b.value - a.value)\n                        .slice(0, 20) // Show top 20 holdings\n                        .map((holding, index) => (\n                          <tr key={holding.ticker} className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-2 whitespace-nowrap text-sm font-medium text-gray-900\">\n                              {holding.ticker}\n                            </td>\n                            <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                              {holding.shares.toLocaleString()}\n                            </td>\n                            <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                              {formatCurrency(holding.value)}\n                            </td>\n                            <td className=\"px-4 py-2 whitespace-nowrap text-sm text-gray-900\">\n                              <div className=\"flex items-center\">\n                                <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\n                                  <div\n                                    className=\"bg-blue-600 h-2 rounded-full\"\n                                    style={{ width: `${Math.min(holding.weight * 100, 100)}%` }}\n                                  ></div>\n                                </div>\n                                {formatPercentage(holding.weight)}\n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                    </tbody>\n                  </table>\n                </div>\n                \n                {selectedStrategyData.yearlySnapshots[selectedStrategyData.yearlySnapshots.length - 1].holdings.length > 20 && (\n                  <p className=\"text-sm text-gray-500 mt-2\">\n                    Showing top 20 of {selectedStrategyData.yearlySnapshots[selectedStrategyData.yearlySnapshots.length - 1].holdings.length} holdings\n                  </p>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsDisplay;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2464, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilbhargava/portfolio-backtesting-app/src/components/backtesting/StrategyComparison.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { BacktestResults } from '../../lib/strategies/strategyRunner';\nimport { formatCurrency, formatPercentage } from '../../lib/utils/portfolioUtils';\n\ninterface StrategyComparisonProps {\n  results: BacktestResults;\n  startYear: number;\n  endYear: number;\n  initialInvestment: number;\n}\n\nconst StrategyComparison: React.FC<StrategyComparisonProps> = ({ \n  results, \n  startYear, \n  endYear, \n  initialInvestment \n}) => {\n  // Prepare data for line chart (portfolio value over time)\n  const lineChartData = React.useMemo(() => {\n    const years = Array.from({ length: endYear - startYear + 1 }, (_, i) => startYear + i);\n    \n    return years.map(year => {\n      const dataPoint: any = { year };\n      \n      results.strategies.forEach(strategy => {\n        const snapshot = strategy.yearlySnapshots.find(s => \n          new Date(s.date).getFullYear() === year\n        );\n        dataPoint[strategy.strategy] = snapshot ? snapshot.totalValue : null;\n      });\n      \n      // Add SPY benchmark\n      const spyPoint = results.spyBenchmark.data.find(d => \n        new Date(d.date).getFullYear() === year\n      );\n      if (spyPoint) {\n        const spyStartPrice = results.spyBenchmark.data.find(d => \n          new Date(d.date).getFullYear() === startYear\n        )?.adjustedPrice || 1;\n        const spyShares = initialInvestment / spyStartPrice;\n        dataPoint['SPY Benchmark'] = spyShares * spyPoint.adjustedPrice;\n      }\n      \n      return dataPoint;\n    }).filter(d => Object.keys(d).length > 1); // Filter out years with no data\n  }, [results, startYear, endYear, initialInvestment]);\n\n  // Prepare data for bar chart (final returns comparison)\n  const barChartData = React.useMemo(() => {\n    const data = results.strategies.map(strategy => ({\n      strategy: strategy.strategy.replace(' Annually', '').replace('Weighted', 'Cap'),\n      totalReturn: strategy.totalReturn * 100,\n      annualizedReturn: strategy.annualizedReturn * 100,\n      finalValue: strategy.endValue\n    }));\n    \n    // Add SPY benchmark\n    data.push({\n      strategy: 'SPY Benchmark',\n      totalReturn: results.spyBenchmark.totalReturn * 100,\n      annualizedReturn: results.spyBenchmark.annualizedReturn * 100,\n      finalValue: results.spyBenchmark.endValue\n    });\n    \n    return data.sort((a, b) => b.finalValue - a.finalValue);\n  }, [results]);\n\n  // Strategy colors\n  const strategyColors = {\n    'Equal Weight Buy & Hold': '#3B82F6',\n    'Market Cap Weighted Buy & Hold': '#10B981',\n    'Equal Weight Rebalanced Annually': '#8B5CF6',\n    'Market Cap Weighted Rebalanced Annually': '#F59E0B',\n    'SPY Benchmark': '#EF4444'\n  };\n\n  const formatTooltipValue = (value: any, name: string) => {\n    if (typeof value === 'number') {\n      return [formatCurrency(value), name];\n    }\n    return [value, name];\n  };\n\n  const CustomTooltip = ({ active, payload, label }: any) => {\n    if (active && payload && payload.length) {\n      return (\n        <div className=\"bg-white p-3 border border-gray-300 rounded-lg shadow-lg\">\n          <p className=\"font-medium text-gray-900\">{`Year: ${label}`}</p>\n          {payload.map((entry: any, index: number) => (\n            <p key={index} style={{ color: entry.color }} className=\"text-sm\">\n              {`${entry.dataKey}: ${formatCurrency(entry.value)}`}\n            </p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-8\">\n      <div className=\"bg-white rounded-lg shadow-md p-6\">\n        <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Strategy Comparison</h2>\n        \n        {/* Portfolio Value Over Time */}\n        <div className=\"mb-8\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Portfolio Value Over Time</h3>\n          <div className=\"h-96\">\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart data={lineChartData}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                <XAxis \n                  dataKey=\"year\" \n                  stroke=\"#666\"\n                  tick={{ fontSize: 12 }}\n                />\n                <YAxis \n                  stroke=\"#666\"\n                  tick={{ fontSize: 12 }}\n                  tickFormatter={(value) => `$${(value / 1000000).toFixed(1)}M`}\n                />\n                <Tooltip content={<CustomTooltip />} />\n                <Legend \n                  wrapperStyle={{ fontSize: '12px' }}\n                  iconType=\"line\"\n                />\n                \n                {results.strategies.map(strategy => (\n                  <Line\n                    key={strategy.strategy}\n                    type=\"monotone\"\n                    dataKey={strategy.strategy}\n                    stroke={strategyColors[strategy.strategy as keyof typeof strategyColors] || '#666'}\n                    strokeWidth={2}\n                    dot={false}\n                    connectNulls={false}\n                  />\n                ))}\n                \n                <Line\n                  type=\"monotone\"\n                  dataKey=\"SPY Benchmark\"\n                  stroke={strategyColors['SPY Benchmark']}\n                  strokeWidth={2}\n                  strokeDasharray=\"5 5\"\n                  dot={false}\n                  connectNulls={false}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n\n        {/* Returns Comparison Bar Chart */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Total Returns */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Total Returns Comparison</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={barChartData} layout=\"horizontal\">\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                  <XAxis \n                    type=\"number\" \n                    stroke=\"#666\"\n                    tick={{ fontSize: 11 }}\n                    tickFormatter={(value) => `${value.toFixed(0)}%`}\n                  />\n                  <YAxis \n                    type=\"category\" \n                    dataKey=\"strategy\" \n                    stroke=\"#666\"\n                    tick={{ fontSize: 11 }}\n                    width={120}\n                  />\n                  <Tooltip \n                    formatter={(value: any) => [`${value.toFixed(1)}%`, 'Total Return']}\n                    labelStyle={{ color: '#374151' }}\n                  />\n                  <Bar \n                    dataKey=\"totalReturn\" \n                    fill=\"#3B82F6\"\n                    radius={[0, 4, 4, 0]}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n\n          {/* Annualized Returns */}\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Annualized Returns Comparison</h3>\n            <div className=\"h-80\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={barChartData} layout=\"horizontal\">\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#f0f0f0\" />\n                  <XAxis \n                    type=\"number\" \n                    stroke=\"#666\"\n                    tick={{ fontSize: 11 }}\n                    tickFormatter={(value) => `${value.toFixed(0)}%`}\n                  />\n                  <YAxis \n                    type=\"category\" \n                    dataKey=\"strategy\" \n                    stroke=\"#666\"\n                    tick={{ fontSize: 11 }}\n                    width={120}\n                  />\n                  <Tooltip \n                    formatter={(value: any) => [`${value.toFixed(1)}%`, 'Annualized Return']}\n                    labelStyle={{ color: '#374151' }}\n                  />\n                  <Bar \n                    dataKey=\"annualizedReturn\" \n                    fill=\"#10B981\"\n                    radius={[0, 4, 4, 0]}\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </div>\n\n        {/* Key Insights */}\n        <div className=\"mt-8 bg-gray-50 rounded-lg p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Key Insights</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Best Performer */}\n            <div className=\"bg-green-100 border border-green-200 rounded-lg p-4\">\n              <h4 className=\"font-medium text-green-900 mb-2\">🏆 Best Performer</h4>\n              <p className=\"text-green-800 font-semibold\">{results.summary.bestStrategy}</p>\n              <p className=\"text-sm text-green-700\">\n                {formatCurrency(Math.max(...results.strategies.map(s => s.endValue)))} final value\n              </p>\n            </div>\n\n            {/* SPY Outperformers */}\n            <div className=\"bg-blue-100 border border-blue-200 rounded-lg p-4\">\n              <h4 className=\"font-medium text-blue-900 mb-2\">🎯 Beat SPY</h4>\n              <p className=\"text-blue-800 font-semibold\">\n                {results.summary.spyOutperformers.length} of {results.strategies.length} strategies\n              </p>\n              <p className=\"text-sm text-blue-700\">\n                outperformed the benchmark\n              </p>\n            </div>\n\n            {/* Range of Returns */}\n            <div className=\"bg-purple-100 border border-purple-200 rounded-lg p-4\">\n              <h4 className=\"font-medium text-purple-900 mb-2\">📊 Return Range</h4>\n              <p className=\"text-purple-800 font-semibold\">\n                {formatPercentage(\n                  (Math.max(...results.strategies.map(s => s.endValue)) - \n                   Math.min(...results.strategies.map(s => s.endValue))) / \n                  Math.min(...results.strategies.map(s => s.endValue))\n                )}\n              </p>\n              <p className=\"text-sm text-purple-700\">\n                difference between best and worst\n              </p>\n            </div>\n          </div>\n\n          {/* Strategy Performance Summary */}\n          <div className=\"mt-6\">\n            <h4 className=\"font-medium text-gray-900 mb-3\">Performance Summary</h4>\n            <div className=\"space-y-2 text-sm text-gray-700\">\n              {results.strategies.map(strategy => {\n                const outperformedSpy = strategy.endValue > results.spyBenchmark.endValue;\n                const outperformance = ((strategy.endValue - results.spyBenchmark.endValue) / results.spyBenchmark.endValue) * 100;\n                \n                return (\n                  <div key={strategy.strategy} className=\"flex justify-between items-center py-2 border-b border-gray-200\">\n                    <span className=\"font-medium\">{strategy.strategy}</span>\n                    <span className={`${outperformedSpy ? 'text-green-600' : 'text-red-600'}`}>\n                      {outperformedSpy ? '+' : ''}{outperformance.toFixed(1)}% vs SPY\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Methodology Note */}\n          <div className=\"mt-6 p-4 bg-white border border-gray-200 rounded-lg\">\n            <h4 className=\"font-medium text-gray-900 mb-2\">📋 Methodology</h4>\n            <ul className=\"text-sm text-gray-600 space-y-1\">\n              <li>• All strategies start with ${formatCurrency(initialInvestment)} on January 1, {startYear}</li>\n              <li>• Rebalanced strategies adjust holdings annually at year-start</li>\n              <li>• Buy & hold strategies only add new stocks when they join the index</li>\n              <li>• Transaction costs and taxes are not included in calculations</li>\n              <li>• Dividends are assumed to be reinvested (using adjusted prices)</li>\n              <li>• SPY benchmark assumes buy-and-hold of SPY ETF over the same period</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StrategyComparison;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3243, "column": 0}, "map": {"version":3,"sources":["file:///Users/sunilbhargava/portfolio-backtesting-app/src/app/backtesting/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { Metadata } from 'next';\nimport BacktestForm from '../../components/backtesting/BacktestForm';\nimport ResultsDisplay from '../../components/backtesting/ResultsDisplay';\nimport StrategyComparison from '../../components/backtesting/StrategyComparison';\nimport { BacktestResults } from '../../lib/strategies/strategyRunner';\nimport { TrendingUp, BarChart3, PieChart, ArrowLeft } from 'lucide-react';\nimport Link from 'next/link';\n\n// Note: This would be in a layout.tsx or exported from page.tsx in App Router\n// export const metadata: Metadata = {\n//   title: 'Portfolio Backtesting | Investment Strategy Analysis',\n//   description: 'Backtest portfolio strategies with historical S&P 500 data. Compare equal weight, market cap weighted, buy & hold, and rebalanced approaches.',\n//   keywords: 'portfolio backtesting, investment strategy, S&P 500, equal weight, market cap weighted, rebalancing',\n// };\n\nexport default function BacktestingPage() {\n  const [results, setResults] = useState<BacktestResults | null>(null);\n  const [activeTab, setActiveTab] = useState<'form' | 'results' | 'comparison'>('form');\n  const [backtestConfig, setBacktestConfig] = useState<{\n    startYear: number;\n    endYear: number;\n    initialInvestment: number;\n  }>({\n    startYear: 2010,\n    endYear: 2024,\n    initialInvestment: 1000000\n  });\n\n  const handleResults = (newResults: BacktestResults) => {\n    setResults(newResults);\n    setActiveTab('results');\n  };\n\n  const resetBacktest = () => {\n    setResults(null);\n    setActiveTab('form');\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-7xl mx-auto px-6 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-4\">\n              <Link \n                href=\"/\"\n                className=\"flex items-center gap-2 text-gray-600 hover:text-gray-900 transition-colors\"\n              >\n                <ArrowLeft className=\"h-5 w-5\" />\n                <span>Back to Market Cap Fetcher</span>\n              </Link>\n              <div className=\"h-6 w-px bg-gray-300\"></div>\n              <div className=\"flex items-center gap-3\">\n                <TrendingUp className=\"h-8 w-8 text-blue-600\" />\n                <div>\n                  <h1 className=\"text-2xl font-bold text-gray-900\">Portfolio Backtesting</h1>\n                  <p className=\"text-sm text-gray-600\">\n                    Compare investment strategies with historical S&P 500 data\n                  </p>\n                </div>\n              </div>\n            </div>\n            \n            {results && (\n              <button\n                onClick={resetBacktest}\n                className=\"px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\n              >\n                New Backtest\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Tab Navigation */}\n      {results && (\n        <div className=\"bg-white border-b\">\n          <div className=\"max-w-7xl mx-auto px-6\">\n            <nav className=\"flex space-x-8\">\n              <button\n                onClick={() => setActiveTab('form')}\n                className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === 'form'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <TrendingUp className=\"h-4 w-4\" />\n                  Configuration\n                </div>\n              </button>\n              <button\n                onClick={() => setActiveTab('results')}\n                className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === 'results'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <BarChart3 className=\"h-4 w-4\" />\n                  Results\n                </div>\n              </button>\n              <button\n                onClick={() => setActiveTab('comparison')}\n                className={`py-4 px-2 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === 'comparison'\n                    ? 'border-blue-500 text-blue-600'\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <PieChart className=\"h-4 w-4\" />\n                  Comparison\n                </div>\n              </button>\n            </nav>\n          </div>\n        </div>\n      )}\n\n      {/* Main Content */}\n      <main className=\"pb-12\">\n        {/* Configuration Tab or Main Form */}\n        {(activeTab === 'form' || !results) && (\n          <BacktestForm \n            onResults={handleResults}\n          />\n        )}\n\n        {/* Results Tab */}\n        {activeTab === 'results' && results && (\n          <ResultsDisplay\n            results={results}\n            startYear={backtestConfig.startYear}\n            endYear={backtestConfig.endYear}\n            initialInvestment={backtestConfig.initialInvestment}\n          />\n        )}\n\n        {/* Comparison Tab */}\n        {activeTab === 'comparison' && results && (\n          <StrategyComparison\n            results={results}\n            startYear={backtestConfig.startYear}\n            endYear={backtestConfig.endYear}\n            initialInvestment={backtestConfig.initialInvestment}\n          />\n        )}\n      </main>\n\n      {/* Footer */}\n      <footer className=\"bg-white border-t mt-auto\">\n        <div className=\"max-w-7xl mx-auto px-6 py-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {/* About */}\n            <div>\n              <h3 className=\"font-semibold text-gray-900 mb-3\">About Portfolio Backtesting</h3>\n              <p className=\"text-sm text-gray-600\">\n                This tool allows you to backtest different portfolio strategies using historical \n                S&P 500 constituent data. Compare equal weight vs market cap weighted approaches, \n                and buy & hold vs rebalanced strategies.\n              </p>\n            </div>\n\n            {/* Features */}\n            <div>\n              <h3 className=\"font-semibold text-gray-900 mb-3\">Features</h3>\n              <ul className=\"text-sm text-gray-600 space-y-1\">\n                <li>• Four distinct investment strategies</li>\n                <li>• Historical S&P 500 constituent data</li>\n                <li>• SPY benchmark comparison</li>\n                <li>• Excel export with detailed analytics</li>\n                <li>• Interactive charts and visualizations</li>\n              </ul>\n            </div>\n\n            {/* Disclaimer */}\n            <div>\n              <h3 className=\"font-semibold text-gray-900 mb-3\">Important Disclaimer</h3>\n              <p className=\"text-sm text-gray-600\">\n                This backtesting tool is for educational and research purposes only. \n                Past performance does not guarantee future results. Transaction costs, \n                taxes, and other factors are not included in these calculations.\n              </p>\n            </div>\n          </div>\n          \n          <div className=\"border-t border-gray-200 mt-8 pt-8 text-center\">\n            <p className=\"text-sm text-gray-500\">\n              Portfolio Backtesting Tool • Built with historical financial data • \n              {new Date().getFullYear()}\n            </p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\n/**\n * Loading component for the page\n */\nexport function Loading() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"text-center\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-2 border-blue-600 border-t-transparent mx-auto mb-4\"></div>\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">Loading Portfolio Backtesting</h2>\n        <p className=\"text-gray-600\">Initializing backtesting environment...</p>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Error component for the page\n */\nexport function Error({\n  error,\n  reset,\n}: {\n  error: Error & { digest?: string };\n  reset: () => void;\n}) {\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n      <div className=\"text-center max-w-md mx-auto p-6\">\n        <div className=\"bg-red-100 rounded-full h-16 w-16 flex items-center justify-center mx-auto mb-4\">\n          <TrendingUp className=\"h-8 w-8 text-red-600\" />\n        </div>\n        <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Something went wrong!</h2>\n        <p className=\"text-gray-600 mb-6\">\n          There was an error loading the backtesting page. Please try again.\n        </p>\n        <div className=\"space-y-3\">\n          <button\n            onClick={reset}\n            className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors\"\n          >\n            Try again\n          </button>\n          <Link\n            href=\"/\"\n            className=\"block w-full px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\n          >\n            Back to Market Cap Fetcher\n          </Link>\n        </div>\n        {process.env.NODE_ENV === 'development' && (\n          <details className=\"mt-6 text-left\">\n            <summary className=\"cursor-pointer text-sm text-gray-500\">Error Details</summary>\n            <pre className=\"mt-2 text-xs text-red-600 bg-red-50 p-2 rounded overflow-auto\">\n              {error.message}\n            </pre>\n          </details>\n        )}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}