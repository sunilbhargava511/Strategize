// pages/share/[id].tsx
// Shareable analysis results page

import { useState, useEffect } from 'react'
import { useRouter } from 'next/router'
import Head from 'next/head'
import ResultsDisplay from '../../components/backtesting/ResultsDisplay'

export default function SharePage() {
  const router = useRouter()
  const { id } = router.query
  const [results, setResults] = useState(null)
  const [simulationName, setSimulationName] = useState('')
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState<string | null>(null)

  useEffect(() => {
    if (id && typeof id === 'string') {
      fetchSharedAnalysis(id)
    }
  }, [id])

  const fetchSharedAnalysis = async (shareId: string) => {
    try {
      setLoading(true)
      const response = await fetch(`/api/share/${shareId}`)
      
      if (!response.ok) {
        if (response.status === 404) {
          throw new Error('Shared analysis not found')
        }
        throw new Error('Failed to load shared analysis')
      }

      const data = await response.json()
      setResults(data.results)
      setSimulationName(data.simulationName || 'Analysis Results')
      setError(null)
    } catch (error: any) {
      console.error('Error fetching shared analysis:', error)
      setError(error.message)
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <Head>
          <title>Loading Shared Analysis - Portfolio Backtesting</title>
        </Head>
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4"></div>
          <p className="text-gray-600">Loading shared analysis...</p>
        </div>
      </div>
    )
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <Head>
          <title>Analysis Not Found - Portfolio Backtesting</title>
        </Head>
        <div className="text-center">
          <div className="text-red-500 text-6xl mb-4">‚ö†Ô∏è</div>
          <h1 className="text-2xl font-bold text-gray-900 mb-2">Analysis Not Found</h1>
          <p className="text-gray-600 mb-6">{error}</p>
          <button
            onClick={() => router.push('/')}
            className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-colors"
          >
            Go to Portfolio Backtesting Tool
          </button>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <Head>
        <title>{simulationName} - Shared Portfolio Analysis</title>
        <meta name="description" content={`Portfolio backtesting analysis: ${simulationName}`} />
        <meta property="og:title" content={`${simulationName} - Portfolio Analysis`} />
        <meta property="og:description" content="Portfolio backtesting analysis results with performance metrics and comparisons" />
        <meta property="og:type" content="website" />
      </Head>

      {/* Header */}
      <div className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between py-4">
            <div className="flex items-center space-x-3">
              <div className="text-2xl">üìä</div>
              <div>
                <h1 className="text-xl font-bold text-gray-900">Portfolio Analysis</h1>
                <p className="text-sm text-gray-500">Shared by Portfolio Backtesting Tool</p>
              </div>
            </div>
            <button
              onClick={() => router.push('/')}
              className="flex items-center space-x-2 px-4 py-2 bg-blue-50 hover:bg-blue-100 text-blue-700 rounded-lg transition-colors text-sm font-medium"
            >
              <svg className="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
              </svg>
              <span>Create Your Own Analysis</span>
            </button>
          </div>
        </div>
      </div>

      {/* Results Display */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="bg-white rounded-lg shadow-sm p-6">
          {results && (
            <ResultsDisplay 
              results={results} 
              simulationName={simulationName}
            />
          )}
        </div>
        
        {/* Footer */}
        <div className="text-center mt-8 text-sm text-gray-500">
          <p>
            Analysis generated by{' '}
            <button
              onClick={() => router.push('/')}
              className="text-blue-600 hover:text-blue-800 font-medium"
            >
              Portfolio Backtesting Tool
            </button>
            {' ‚Ä¢ '}
            Create your own analysis with custom portfolios and date ranges
          </p>
        </div>
      </div>
    </div>
  )
}